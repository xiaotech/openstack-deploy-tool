#!/bin/bash

function init_env()
{
    echo $1 > /etc/hostname
    hostname $1

    cp /etc/hosts /etc/hosts.autoback-$(date +%Y%m%d%H%M%S)
    sed -i "/$1/d" /etc/hosts
    if [ $1 = "controller" ];then
        echo "$2 $1" >> /etc/hosts
    else
        echo "$2 $1 controller" >> /etc/hosts
    fi
    cp /etc/rabbitmq/rabbitmq-env.conf /etc/rabbitmq/rabbitmq-env.conf.autoback-$(date +%Y%m%d%H%M%S)
    cp /opt/openstack-install/keystone/rabbitmq-env.conf /etc/rabbitmq/rabbitmq-env.conf
    sed -i "s/MIP/${2}/g"  /etc/rabbitmq/rabbitmq-env.conf 
    service mysql restart
    service memcached restart
    service rabbitmq-server restart
    rabbitmqctl add_user openstack rabbit
    rabbitmqctl set_permissions openstack ".*" ".*" ".*"
}

function init_compute_env()
{
    sed -i "/controller/d" /etc/hosts
    cp /etc/hosts /etc/hosts.autoback-$(date +%Y%m%d%H%M%S)
    echo "${1} controller" >> /etc/hosts
}

function install_keystone()
{	
    mysql -u$1 -p$2 -e "create database keystone"
    mysql -u$1 -p$2 -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY 'keystone'";
    mysql -u$1 -p$2 -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY 'keystone'";
    echo "manual" > /etc/init/keystone.override
    cp /etc/keystone/keystone.conf /etc/keystone/keystone.conf.autoback-$(date +%Y%m%d%H%M%S)
    cp /etc/keystone/keystone-paste.ini /etc/keystone/keystone-paste.ini.autoback-$(date +%Y%m%d%H%M%S)
    cp /opt/openstack-install/keystone/keystone.conf /etc/keystone/keystone.conf
    cp /opt/openstack-install/keystone/keystone-paste.ini /etc/keystone/keystone-paste.ini
    su -s /bin/sh -c "keystone-manage db_sync" keystone
    cp /opt/openstack-install/keystone/wsgi-keystone.conf /etc/apache2/sites-available/wsgi-keystone.conf
    cp /opt/openstack-install/keystone/apache2.conf /etc/apache2/apache2.conf
    ln -s /etc/apache2/sites-available/wsgi-keystone.conf /etc/apache2/sites-enabled
    service apache2 restart
    rm -f /var/lib/keystone/keystone.db
    export OS_TOKEN=xiaojun-123456
    export OS_URL=http://controller:35357/v3
    export OS_IDENTITY_API_VERSION=3
    openstack service create  --name keystone --description "OpenStack Identity" identity
    openstack endpoint create --region RegionOne  identity public http://controller:5000/v2.0
    openstack endpoint create --region RegionOne  identity internal http://controller:5000/v2.0
    openstack endpoint create --region RegionOne  identity admin http://controller:35357/v2.0    
    openstack project create --domain default --description "Admin Project" admin
    openstack user create --domain default  --password admin admin
    openstack role create admin
    openstack role add --project admin --user admin admin

    openstack project create --domain default --description "Demo Project" demo
    openstack user create --domain default --password demo demo
    openstack role create user
    openstack role create _member_
    openstack role add --project demo --user demo user
    openstack project create --domain default --description "Service Project" service
    cp /opt/openstack-install/keystone/admin-openrc.sh /root/
    unset OS_TOKEN OS_URL OS_IDENTITY_API_VERSION
    echo "Keystone install ok..."
}

function install_glance()
{
    mysql -u$1 -p$2 -e "create database glance"
    mysql -u$1 -p$2 -e "GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' IDENTIFIED BY 'glance'";
    mysql -u$1 -p$2 -e "GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' IDENTIFIED BY 'glance'";
    source /opt/openstack-install/keystone/admin-openrc.sh
    openstack service create --name glance   --description "OpenStack Image service" image
    openstack endpoint create --region RegionOne  image public http://controller:9292
    openstack endpoint create --region RegionOne  image internal http://controller:9292
    openstack endpoint create --region RegionOne  image admin http://controller:9292
    openstack user create --domain default  --password glance glance
    openstack role add --project service --user glance admin
    cp /etc/glance/glance-api.conf /etc/glance/glance-api.conf.autoback-$(date +%Y%m%d%H%M%S)
    cp /etc/glance/glance-registry.conf /etc/glance/glance-registry.conf.autoback-$(date +%Y%m%d%H%M%S)
    cp /opt/openstack-install/glance/glance-api.conf /etc/glance/glance-api.conf
    cp /opt/openstack-install/glance/glance-registry.conf /etc/glance/glance-registry.conf
    su -s /bin/sh -c "glance-manage db_sync" glance
    service glance-api restart
    service glance-registry restart
    rm -f /var/lib/glance/glance.sqlite
}

function install_nova()
{
    mysql -u$1 -p$2 -e "create database nova"
    mysql -u$1 -p$2 -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY 'nova'";
    mysql -u$1 -p$2 -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY 'nova'";
    source /opt/openstack-install/keystone/admin-openrc.sh
    openstack service create --name nova   --description "OpenStack Compute" compute
    openstack endpoint create --region RegionOne compute public http://controller:8774/v2/%\(tenant_id\)s
    openstack endpoint create --region RegionOne compute internal http://controller:8774/v2/%\(tenant_id\)s
    openstack endpoint create --region RegionOne compute admin http://controller:8774/v2/%\(tenant_id\)s
    openstack user create --domain default  --password nova nova
    openstack role add --project service --user nova admin
    cp /etc/nova/nova.conf /etc/nova/nova.conf.autoback-$(date +%Y%m%d%H%M%S)
    cp /etc/nova/nova-compute.conf /etc/nova/nova-compute.conf.autoback-$(date +%Y%m%d%H%M%S)
    cp /opt/openstack-install/nova/nova.conf /etc/nova/nova.conf
    sed -i "s/MIP/${3}/g"  /etc/nova/nova.conf 
    cat /proc/cpuinfo |egrep '(vmx|svm)' >> /dev/null
    if [ $? -ne 0 ];then
        sed -i 's/kvm/qemu/g' /etc/nova/nova-compute.conf
    fi
    su -s /bin/sh -c "nova-manage db sync" nova
    service nova-api restart
    service nova-cert restart
    service nova-consoleauth restart
    service nova-scheduler restart
    service nova-conductor restart
    service nova-novncproxy restart
    rm -f /var/lib/nova/nova.sqlite
}

function install_neutron()
{
    mysql -u$1 -p$2 -e "create database neutron"
    mysql -u$1 -p$2 -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' IDENTIFIED BY 'neutron'";
    mysql -u$1 -p$2 -e "GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' IDENTIFIED BY 'neutron'";
    source /opt/openstack-install/keystone/admin-openrc.sh
    openstack service create --name neutron   --description "OpenStack Networking" network
    openstack endpoint create --region RegionOne network public http://controller:9696
    openstack endpoint create --region RegionOne network internal http://controller:9696
    openstack endpoint create --region RegionOne network admin http://controller:9696
    openstack user create --domain default  --password neutron neutron
    openstack role add --project service --user neutron admin
    cp /etc/neutron/neutron.conf /etc/neutron/neutron.conf.autoback-$(date +%Y%m%d%H%M%S)
    cp /etc/neutron/l3_agent.ini /etc/neutron/l3_agent.ini.autoback-$(date +%Y%m%d%H%M%S)
    cp /etc/neutron/dhcp_agent.ini /etc/neutron/dhcp_agent.ini.autoback-$(date +%Y%m%d%H%M%S)
    cp /etc/neutron/metadata_agent.ini /etc/neutron/metadata_agent.ini.autoback-$(date +%Y%m%d%H%M%S)
    cp /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugins/ml2/ml2_conf.ini.autoback-$(date +%Y%m%d%H%M%S)
    cp /opt/openstack-install/neutron/neutron.conf /etc/neutron/neutron.conf
    cp /opt/openstack-install/neutron/l3_agent.ini /etc/neutron/l3_agent.ini
    cp /opt/openstack-install/neutron/dhcp_agent.ini /etc/neutron/dhcp_agent.ini
    cp /opt/openstack-install/neutron/metadata_agent.ini /etc/neutron/metadata_agent.ini
    cp /opt/openstack-install/neutron/ml2_conf-gre.ini /etc/neutron/plugins/ml2/ml2_conf.ini
    cp /opt/openstack-install/neutron/nova.conf /etc/nova/nova.conf
    sed -i "s/MIP/${3}/g"  /etc/nova/nova.conf 
    sed -i "s/MIP/$3/g" /etc/neutron/plugins/ml2/ml2_conf.ini
    su -s /bin/sh -c "neutron-db-manage --config-file /etc/neutron/neutron.conf --config-file /etc/neutron/plugins/ml2/ml2_conf.ini upgrade head" neutron	
    rm -f /var/lib/neutron/neutron.sqlite
    service openvswitch-switch restart
    ovs-vsctl add-br br-public
    service nova-api restart
    service neutron-server restart
    service neutron-plugin-openvswitch-agent restart
    service neutron-dhcp-agent restart
    service neutron-metadata-agent restart
    service neutron-l3-agent restart
}

function install_compute_nova()
{
    cp /etc/nova/nova.conf /etc/nova/nova.conf.autoback-$(date +%Y%m%d%H%M%S)
    cp /etc/nova/nova-compute.conf /etc/nova/nova-compute.conf.autoback-$(date +%Y%m%d%H%M%S)
    cp /opt/openstack-install/compute/nova/nova.conf /etc/nova/nova.conf
    sed -i "s/MIP/${1}/g"  /etc/nova/nova.conf 
    sed -i "s/CIP/${2}/g"  /etc/nova/nova.conf 
    cat /proc/cpuinfo |egrep '(vmx|svm)' >> /dev/null
    if [ $? -ne 0 ];then
        sed -i 's/kvm/qemu/g' /etc/nova/nova-compute.conf
    fi
    service nova-compute restart
    rm -f /var/lib/nova/nova.sqlite
}

function install_compute_neutron()
{
    cp /etc/neutron/neutron.conf /etc/neutron/neutron.conf.autoback-$(date +%Y%m%d%H%M%S)
    cp /etc/neutron/plugins/ml2/ml2_conf.ini /etc/neutron/plugins/ml2/ml2_conf.ini.autoback-$(date +%Y%m%d%H%M%S)
    cp /opt/openstack-install/compute/neutron/neutron.conf /etc/neutron/neutron.conf
    cp /opt/openstack-install/compute/neutron/ml2_conf-gre.ini /etc/neutron/plugins/ml2/ml2_conf.ini
    cp /opt/openstack-install/compute/neutron/nova.conf /etc/nova/nova.conf
    sed -i "s/MIP/${1}/g"  /etc/nova/nova.conf 
    sed -i "s/CIP/${2}/g"  /etc/nova/nova.conf 
    sed -i "s/MIP/${1}/g" /etc/neutron/plugins/ml2/ml2_conf.ini
    service nova-compute restart
    service neutron-plugin-openvswitch-agent restart
    rm -f /var/lib/neutron/neutron.sqlite
  
}

function install_compute_startup()
{
    sed -i '/exit/d' /etc/rc.local
    echo "service nova-compute restart" >> /etc/rc.local
    echo "service neutron-plugin-openvswitch-agent restart" >> /etc/rc.local
}

#default settings
HostName="controller"
ManageEth="eth0"
MysqlUser="root"
MysqlPass="kx123"
Role="compute"
InstallAllow=false
ControllerIP=""
####################

while getopts n:i:u:p:r:c:h arg
do
    case $arg in 
        n)
	    HostName=${OPTARG}
			;;
	i)
	    ManageEth=$OPTARG
	    ;;
	u)
	    MysqlUser=$OPTARG
	    ;;
	p)
	    MysqlPass=$OPTARG
	    ;;
	r)
	    Role=$OPTARG
	    ;;
        c)
	    ControllerIP=$OPTARG
            ;;
	h)
	    echo "Usage:openstack-install -n hostname -i interface -u mysql_user -p mysql_password -r controller|compute -c controller ip"
	    exit 0
	    ;;
	?)
	    echo "unknow option"
	    exit 1
	    ;;
    esac
done


ManageIP=$(ifconfig ${ManageEth}|grep "inet addr" |awk '{print $2}'|awk -F: '{print $2}')

if [ -z $ManageIP ];then
    echo "cann't get ip from $ManageEth"
    exit 1
fi

if [ $Role = "controller" ];then
    init_env $HostName $ManageIP
    install_keystone $MysqlUser $MysqlPass
    install_glance $MysqlUser $MysqlPass 
    install_nova $MysqlUser $MysqlPass $ManageIP
    install_neutron $MysqlUser $MysqlPass $ManageIP
else
    if [ -z $ControllerIP ];then
        ControllerIP=$(cat /etc/hosts|grep controller|awk '{print $1}')
        if [ -z $ControllerIP ];then
	    echo "install compute node,must give controler ip,use -c ip,or configure  controller in /etc/hosts"
	    exit 1
        fi
    fi
    init_compute_env $ControllerIP
    install_compute_nova $ManageIP $ControllerIP	
    install_compute_neutron $ManageIP $ControllerIP	
    install_compute_startup
fi
